{"version":3,"sources":["../src/components/Charts/config.ts"],"sourcesContent":["import Highcharts from 'highcharts/highstock';\n\nexport const defaultLimit: string = '365';\nexport const defaultIntervalType: string = 'day';\n\nexport interface ChildProps {\n  preview?: boolean;\n}\n\nexport interface ChartsProps {\n  request: {\n    url: string;\n    query?: {\n      limit: string;\n      intervalType: string;\n    };\n    formatter: (data: any) => any;\n  };\n  options: any;\n  data?: {\n    list: any[];\n  };\n}\n\nexport interface ScopeItemType {\n  label: string;\n  limit: number;\n}\n\nexport interface ScopeType {\n  min?: ScopeItemType[];\n  hour?: ScopeItemType[];\n  day: ScopeItemType[];\n  month?: ScopeItemType[];\n}\nexport type onCombination = (\n  type: keyof ScopeType,\n  limit: string | undefined,\n) => void;\nexport type ChartOptionsProps = {\n  intervalScope?: ScopeType;\n  intervalType: keyof ScopeType;\n  limit: string | undefined;\n  onCombination: onCombination;\n};\n\nexport const scope: ScopeType = {\n  min: [\n    {\n      label: '1h',\n      limit: 60,\n    },\n    {\n      label: '2h',\n      limit: 120,\n    },\n    {\n      label: '4h',\n      limit: 240,\n    },\n    {\n      label: '6h',\n      limit: 360,\n    },\n    {\n      label: '12h',\n      limit: 720,\n    },\n    {\n      label: '24h',\n      limit: 1440,\n    },\n  ],\n  hour: [\n    {\n      label: '1d',\n      limit: 24,\n    },\n    {\n      label: '3d',\n      limit: 72,\n    },\n    {\n      label: '7d',\n      limit: 168,\n    },\n    {\n      label: '14d',\n      limit: 336,\n    },\n  ],\n  day: [\n    {\n      label: '1w',\n      limit: 7,\n    },\n    {\n      label: '1m',\n      limit: 30,\n    },\n    {\n      label: '3m',\n      limit: 91,\n    },\n    {\n      label: '6m',\n      limit: 182,\n    },\n    {\n      label: '1y',\n      limit: 365,\n    },\n    {\n      label: 'All',\n      limit: 2000,\n    },\n  ],\n  month: [\n    {\n      label: '6m',\n      limit: 6,\n    },\n    {\n      label: '1y',\n      limit: 12,\n    },\n    {\n      label: 'All',\n      limit: 2000,\n    },\n  ],\n};\nexport const ConstructorType = ({ options }: ChartsProps) => {\n  if (options?.chart?.type === 'pie') {\n    return '';\n  }\n  if (options?.chart?.type === 'column') {\n    return '';\n  }\n  return 'stockChart';\n};\nconst LineChart = ({ options, request, data }: ChartsProps) => {\n  return {\n    chart: {\n      alignTicks: false,\n      height: 600,\n      animation: false,\n      backgroundColor: null,\n    },\n    credits: {\n      enabled: false,\n    },\n    colors: [\n      '#7cb5ec',\n      '#434348',\n      '#f7a35c',\n      '#2b908f',\n      '#91e8e1',\n      '#90ed7d',\n      '#8085e9',\n      '#f15c80',\n      '#e4d354',\n      '#f45b5b',\n    ],\n    navigator: {\n      enabled: true,\n    },\n    rangeSelector: {\n      enabled: true,\n      buttons: [],\n    },\n    scrollbar: {\n      enabled: true,\n    },\n    plotOptions: {\n      series: {\n        dataGrouping: {\n          enabled: false,\n          // dateTimeLabelFormats: {\n          //   week: ['%A, %b %e, %Y'],\n          // },\n        },\n      },\n      area: {\n        fillColor: {\n          linearGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 1,\n          },\n          stops: [\n            // @ts-ignore\n            [0, Highcharts.getOptions().colors[0]],\n            [\n              1,\n              // @ts-ignore\n              Highcharts.color(Highcharts.getOptions().colors[0])\n                .setOpacity(0)\n                .get('rgba'),\n            ],\n          ],\n        },\n        marker: {\n          radius: 2,\n        },\n        lineWidth: 1,\n        states: {\n          hover: {\n            lineWidth: 1,\n          },\n        },\n        threshold: null,\n      },\n      line: {\n        lineWidth: 1,\n        states: {\n          hover: {\n            lineWidth: 1,\n          },\n        },\n      },\n    },\n    legend: {\n      enabled: options.series.length > 1,\n    },\n    tooltip: {\n      split: false,\n      useHTML: true,\n      headerFormat: `<table>\n              <tr>\n                <th colspan=\"2\" style=\"font-weight: normal;\">{point.key}</th>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #ccc;\">\n                <th style=\"padding-bottom: 5px;\"></th>\n              </tr>\n              `,\n      pointFormat: `\n            <tr><td style=\"padding-top: 5px;\"></td></tr>\n            <tr>\n              <td style=\"color: {series.color}; padding-right: 10px;\">[ {series.name} ]</td>\n              <td style=\"text-align: right\"><b>{point.y}</b></td>  \n            </tr>`,\n      footerFormat: '</table>',\n      shape: 'square',\n      shared: true,\n    },\n    yAxis: {\n      opposite: false,\n    },\n    series: options.series.map((_: any, i: number) => ({\n      data: request.formatter(data)[i],\n    })),\n    exporting: {\n      enabled: true,\n      buttons: {\n        contextButton: {\n          menuItems: [\n            'viewFullscreen',\n            'printChart',\n            'separator',\n            'downloadPNG',\n            'downloadJPEG',\n            'downloadPDF',\n            'downloadSVG',\n            'downloadCSV',\n            'downloadXLS',\n          ],\n        },\n      },\n    },\n  };\n};\nconst PieChart = ({ request, data }: ChartsProps) => {\n  return {\n    chart: {\n      animation: false,\n      height: 600,\n    },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      area: {\n        fillColor: {\n          linearGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 1,\n          },\n          stops: [\n            // @ts-ignore\n            [0, Highcharts.getOptions().colors[0]],\n            [\n              1,\n              // @ts-ignore\n              Highcharts.color(Highcharts.getOptions().colors[0])\n                .setOpacity(0)\n                .get('rgba'),\n            ],\n          ],\n        },\n        marker: {\n          radius: 2,\n        },\n        lineWidth: 1,\n        states: {\n          hover: {\n            lineWidth: 1,\n          },\n        },\n        threshold: null,\n      },\n      line: {\n        lineWidth: 1,\n        states: {\n          hover: {\n            lineWidth: 1,\n          },\n        },\n      },\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n        },\n        showInLegend: true,\n        colorByPoint: true,\n      },\n    },\n    tooltip: {\n      shape: 'square',\n    },\n    series: [\n      {\n        data: request.formatter(data),\n      },\n    ],\n    exporting: {\n      enabled: true,\n      buttons: {\n        contextButton: {\n          menuItems: [\n            'printChart',\n            'separator',\n            'downloadPNG',\n            'downloadJPEG',\n            'downloadPDF',\n            'downloadSVG',\n            'downloadCSV',\n            'downloadXLS',\n          ],\n        },\n      },\n    },\n  };\n};\n\nexport const optsOrigin = ({ options, request, data }: ChartsProps) => {\n  if (options.chart.type === 'pie') {\n    return PieChart({ options, request, data });\n  }\n  if (options.chart.type === 'column') {\n    return PieChart({ options, request, data });\n  }\n  return LineChart({ options, request, data });\n};\nexport const previewOpts = {\n  title: '',\n  subtitle: '',\n  chart: {\n    height: 240,\n    zoomType: '',\n  },\n  exporting: {\n    enabled: false,\n  },\n  navigator: {\n    enabled: false,\n  },\n  rangeSelector: {\n    enabled: false,\n  },\n  scrollbar: {\n    enabled: false,\n  },\n};\n"],"mappings":"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","names":[]}