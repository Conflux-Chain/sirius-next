{"version":3,"sources":["../src/components/Link/index.tsx"],"sourcesContent":["import React, { PropsWithChildren, MouseEvent } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\n\ninterface LinkProps {\n  className?: string;\n  href: string;\n  state?: any; // Consider typing this more strictly if possible\n}\n\nexport const Link: React.FC<PropsWithChildren<LinkProps>> = React.memo(\n  ({ className, href, children, state, ...others }) => {\n    const history = useHistory();\n\n    const handleClick = (e: MouseEvent<HTMLAnchorElement | HTMLDivElement>) => {\n      e.preventDefault();\n\n      if (!href) return;\n\n      if (/^http/.test(href)) {\n        window.open(href, '_blank', 'noopener,noreferrer');\n      } else if (e.metaKey || e.ctrlKey) {\n        window.open(`${window.location.origin}${href}`, '_blank');\n      } else {\n        history.push({\n          pathname: href,\n          state: state,\n        });\n      }\n    };\n\n    if (/^http/.test(href)) {\n      return (\n        <a className={className} href={href} onClick={handleClick} {...others}>\n          {children}\n        </a>\n      );\n    } else {\n      return (\n        <RouterLink\n          className={className}\n          to={{\n            pathname: href,\n            state: state,\n          }}\n          onClick={handleClick}\n          {...others}\n        >\n          {children}\n        </RouterLink>\n      );\n    }\n  },\n);\n\n// react-router-dom v6\n// import React, { PropsWithChildren, MouseEvent } from 'react';\n// import { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n// interface LinkProps {\n//   className: string;\n//   href: string;\n//   state?: any;\n// }\n\n// export const Link: React.FC<PropsWithChildren<LinkProps>> = React.memo(\n//   ({ className, href, children, state, ...others }) => {\n//     const navigate = useNavigate();\n\n//     const handleClick = (e: MouseEvent<HTMLAnchorElement | HTMLDivElement>) => {\n//       e.preventDefault();\n\n//       if (!href) return;\n\n//       if (/^http/.test(href)) {\n//         window.open(href, '_blank', 'noopener,noreferrer');\n//       } else if (e.metaKey || e.ctrlKey) {\n//         window.open(`${window.location.origin}${href}`, '_blank');\n//       } else {\n//         navigate(href, { state });\n//       }\n//     };\n\n//     if (/^http/.test(href)) {\n//       return (\n//         <a href={href} onClick={handleClick} {...others}>\n//           {children}\n//         </a>\n//       );\n//     } else {\n//       return (\n//         <RouterLink className={className} to={href} state={state} onClick={handleClick} {...others}>\n//           {children}\n//         </RouterLink>\n//       );\n//     }\n//   }\n// );\n"],"mappings":";AAAA,OAAO,WAA8C;AACrD,SAAS,QAAQ,YAAY,kBAAkB;AA+BvC;AAvBD,IAAM,OAA+C,MAAM;AAAA,EAChE,CAAC,EAAE,WAAW,MAAM,UAAU,OAAO,GAAG,OAAO,MAAM;AACnD,UAAM,UAAU,WAAW;AAE3B,UAAM,cAAc,CAAC,MAAsD;AACzE,QAAE,eAAe;AAEjB,UAAI,CAAC;AAAM;AAEX,UAAI,QAAQ,KAAK,IAAI,GAAG;AACtB,eAAO,KAAK,MAAM,UAAU,qBAAqB;AAAA,MACnD,WAAW,EAAE,WAAW,EAAE,SAAS;AACjC,eAAO,KAAK,GAAG,OAAO,SAAS,MAAM,GAAG,IAAI,IAAI,QAAQ;AAAA,MAC1D,OAAO;AACL,gBAAQ,KAAK;AAAA,UACX,UAAU;AAAA,UACV;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,QAAI,QAAQ,KAAK,IAAI,GAAG;AACtB,aACE,oBAAC,OAAE,WAAsB,MAAY,SAAS,aAAc,GAAG,QAC5D,UACH;AAAA,IAEJ,OAAO;AACL,aACE;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,IAAI;AAAA,YACF,UAAU;AAAA,YACV;AAAA,UACF;AAAA,UACA,SAAS;AAAA,UACR,GAAG;AAAA,UAEH;AAAA;AAAA,MACH;AAAA,IAEJ;AAAA,EACF;AACF;","names":[]}