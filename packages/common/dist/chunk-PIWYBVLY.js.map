{"version":3,"sources":["../src/utils/rpcRequest.ts"],"sourcesContent":["import { publishRequestError } from './index';\n\nconst request = async <T>(method: string, ...args: any[]): Promise<T> => {\n  const CFX = (window as any).CFX;\n\n  try {\n    const [namespace, m] = method.split('_');\n    // 断言 CFX[namespace][m] 为一个函数，并调用它\n    if (namespace && m && typeof CFX[namespace][m] === 'function') {\n      return await CFX[namespace][m](...args);\n    } else {\n      throw new Error(\n        `Method ${m} is not a function in namespace ${namespace}`,\n      );\n    }\n  } catch (e: unknown) {\n    if (e instanceof Error) {\n      publishRequestError(e, 'rpc');\n    } else {\n      console.error('Unexpected error', e);\n    }\n    throw e;\n  }\n};\n\nexport const getAccount = async (...args: any[]) => {\n  try {\n    return request('cfx_getAccount', ...args);\n  } catch (e) {\n    throw e;\n  }\n};\n"],"mappings":";;;;;AAEA,IAAM,UAAU,OAAU,WAAmB,SAA4B;AACvE,QAAM,MAAO,OAAe;AAE5B,MAAI;AACF,UAAM,CAAC,WAAW,CAAC,IAAI,OAAO,MAAM,GAAG;AAEvC,QAAI,aAAa,KAAK,OAAO,IAAI,SAAS,EAAE,CAAC,MAAM,YAAY;AAC7D,aAAO,MAAM,IAAI,SAAS,EAAE,CAAC,EAAE,GAAG,IAAI;AAAA,IACxC,OAAO;AACL,YAAM,IAAI;AAAA,QACR,UAAU,CAAC,mCAAmC,SAAS;AAAA,MACzD;AAAA,IACF;AAAA,EACF,SAAS,GAAY;AACnB,QAAI,aAAa,OAAO;AACtB,0BAAoB,GAAG,KAAK;AAAA,IAC9B,OAAO;AACL,cAAQ,MAAM,oBAAoB,CAAC;AAAA,IACrC;AACA,UAAM;AAAA,EACR;AACF;AAEO,IAAM,aAAa,UAAU,SAAgB;AAClD,MAAI;AACF,WAAO,QAAQ,kBAAkB,GAAG,IAAI;AAAA,EAC1C,SAAS,GAAG;AACV,UAAM;AAAA,EACR;AACF;","names":[]}